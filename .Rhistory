par(mfg=c(1,1))
hist(stepsPerDay,
breaks = 10,
main = "Distribution of steps taken per day",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
par(mfg=c(1,2))
hist(impStepsPerDay,
par(mfg=c(1,2))
breaks = 10,
main = "Distribution of steps taken per day",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
par(mfg=c(1,1))
hist(stepsPerDay,
breaks = 10,
main = "Distribution of steps taken per day",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
par(mfg=c(1,2))
hist(impStepsPerDay,
par(mfg=c(1,2))
breaks = 10,
main = "Distribution of steps taken per day",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
par(mfg=c(1,1))
hist(stepsPerDay,
breaks = 10,
main = "Distribution of steps taken per day",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
par(mfg=c(1,2))
hist(impStepsPerDay,
par(mfg=c(1,2))
breaks = 10,
main = "Distribution of steps taken per day",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
par(mfrow = c(1,2))
par(mfg=c(1,1))
hist(stepsPerDay,
breaks = 10,
main = "Distribution of steps taken per day",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
par(mfg=c(1,2))
hist(impStepsPerDay,
par(mfg=c(1,2))
breaks = 10,
main = "Distribution of steps taken per day",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
par(mfrow = c(1,2))
hist(stepsPerDay,
par(mfg=c(1,1))
breaks = 10,
main = "Distribution, original data",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
hist(stepsPerDay,
par(mfg=c(1,1)),
breaks = 10,
main = "Distribution, original data",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
?hist
par(mfg=c(1,1))
hist(stepsPerDay,
breaks = 10,
main = "Distribution, original data",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
par(mfg=c(1,2))
hist(impStepsPerDay,
breaks = 10,
main = "Distribution, NA's replaced with mean",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
title: "Reproducible Research: Peer Assessment 1"
rm(list=ls())
fileName <- unzip("activity.zip")
fileName <- unzip("activity.zip")
breaks = 10,
stepsPerDay <- with( stepData, tapply(steps, date, sum, na.rm = T) )
stepsPerDay <- with( stepData, tapply(steps, date, sum, na.rm = T) )
stepsPerDay <- with( stepData, tapply(steps, date, sum, na.rm = T) )
stepData <- read.csv(fileName)
stepsPerDay <- with( stepData, tapply(steps, date, sum, na.rm = T) )
hist(stepsPerDay,
breaks = 10,
main = "Distribution of steps taken per day",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
mean(stepsPerDay)
median(stepsPerDay)
stepData <- read.csv(fileName)
## What is mean total number of steps taken per day?
stepsPerDay <- with( stepData, tapply(steps, date, sum, na.rm = T) )
hist(stepsPerDay,
breaks = 10,
main = "Distribution of steps taken per day",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
mean(stepsPerDay)
median(stepsPerDay)
## What is the average daily activity pattern?
# intervals <- unique(stepData$interval)
meanStepsPerInterval <- factor( with(stepData, tapply(steps, interval, mean, na.rm = T) ) )
names(meanStepsPerInterval) <- unique(stepData$interval)
plot(intervals,
meanStepsPerInterval,
type = "l",
ylab = "Mean steps per interval",
xlab = "Interval number",
main = "Number of steps taken per interval, averaged across all days")
intervals[which.max(meanStepsPerInterval)]
## Imputing missing values
missingVals <- is.na(stepData[,1])
sum(missingVals)
# replace missing steps values with the mean number of steps for that interval
imputedData <- stepData
imputedData$steps[missingVals] <-
as.numeric( as.character( meanStepsPerInterval[as.character(stepData$interval[missingVals])] ) )
impStepsPerDay <- with( imputedData, tapply(steps, date, sum, na.rm = T) )
par(mfrow = c(1,2))
par(mfg=c(1,1))
hist(stepsPerDay,
breaks = 10,
main = "Distribution, original data",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
par(mfg=c(1,2))
hist(impStepsPerDay,
breaks = 10,
main = "Distribution, NA's replaced with mean",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
plot.new()
par(mfrow = c(1,2))
par(mfg=c(1,1))
hist(stepsPerDay,
breaks = 10,
main = "Distribution, original data",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
par(mfg=c(1,2))
hist(impStepsPerDay,
breaks = 10,
main = "Distribution, NA's replaced with mean",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
mean(impStepsPerDay)
median(impStepsPerDay)
hist(impStepsPerDay,
breaks = 10,
main = "NA's replaced w/ mean of interval",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
?factor
levels(weekdays(imputedData$date))
weekdays(imputedData$date)
?weekdays
weekdays(as.POSIXt(imputedData$date))
?as
weekdays(as.Date(imputedData$date))
?weekdays
imputedData$dayOfWeek <- weekdays(as.Date(imputedData$date))
View(imputedData)
View(imputedData)
?grep
grep("Saturday|Sunday", imputedData$dayOfWeek)
grep("Saturday|Sunday", imputedData$dayOfWeek)
?grepl
imputedData$weekDayOrEnd <- "weekday"
imputedData$weekDayOrEnd[grepl("Saturday|Sunday", imputedData$dayOfWeek)] <- "weekend"
levels(imputedData$weekDayOrEnd)
imputedData$dayOfWeek <- factor(weekdays(as.Date(imputedData$date)))
imputedData$weekDayOrEnd <- "weekday"
imputedData$weekDayOrEnd <- factor("weekday")
imputedData$weekDayOrEnd[grepl("Saturday|Sunday", imputedData$dayOfWeek)] <- "weekend"
imputedData$weekDayOrEnd[grepl("Saturday|Sunday", imputedData$dayOfWeek)] <- factor("weekend")
?isWeekday
library(chron)
library(chron)
imputedData$dayOfWeek <- factor(weekdays(as.Date(imputedData$date)))
imputedData$weekDayOrEnd <- chron::is.weekend(imputedData$date)
imputedData$weekDayOrEnd <- factor("weekday", levels = c("weekday", "weekend"))
with(imputedData {
dayOfWeek <- factor(weekdays(as.Date(date))),
weekDayOrEnd <- factor("weekday", levels = c("weekday", "weekend")),
weekDayOrEnd[grepl("Saturday|Sunday", imputedData$dayOfWeek)] <- "weekend",
})
with(imputedData, {
dayOfWeek <- factor(weekdays(as.Date(date))),
weekDayOrEnd <- factor("weekday", levels = c("weekday", "weekend")),
weekDayOrEnd[grepl("Saturday|Sunday", dayOfWeek)] <- "weekend" }
)
with(imputedData, {
dayOfWeek <- factor(weekdays(as.Date(date)))
weekDayOrEnd <- factor("weekday", levels = c("weekday", "weekend"))
weekDayOrEnd[grepl("Saturday|Sunday", dayOfWeek)] <- "weekend" }
)
with(imputedData, {
dayOfWeek <- factor(weekdays(as.Date(date)))
weekDayOrEnd <- "weekday"
weekDayOrEnd[grepl("Saturday|Sunday", dayOfWeek)] <- "weekend"
weekDayOrEnd <- factor(weekDayOrEnd, levels = c("weekday", "weekend")}
)
with(imputedData, {
dayOfWeek <- factor(weekdays(as.Date(date)))
weekDayOrEnd <- "weekday"
weekDayOrEnd[grepl("Saturday|Sunday", dayOfWeek)] <- "weekend"
weekDayOrEnd <- factor(weekDayOrEnd, levels = c("weekday", "weekend")) }
)
imputedData$dayOfWeek <- factor(weekdays(as.Date(imputedData$date)))
imputedData$weekDayOrEnd <- "weekday"
imputedData$weekDayOrEnd[grepl("Saturday|Sunday", imputedData$dayOfWeek)] <- "weekend"
imputedData$weekDayOrEnd <- factor(weekDayOrEnd, levels = c("weekday", "weekend"))
imputedData$weekDayOrEnd <- factor(imputedData$weekDayOrEnd, levels = c("weekday", "weekend"))
with(imputedData, {
dayOfWeek <- factor(weekdays(as.Date(date)))
weekDayOrEnd <- "weekday"
weekDayOrEnd[grepl("Saturday|Sunday", dayOfWeek)] <- "weekend"
weekDayOrEnd <- factor(weekDayOrEnd, levels = c("weekday", "weekend")) }
)
with(imputedData, {
dayOfWeek <- factor(weekdays(as.Date(date)))
weekDayOrEnd <- "weekday"
weekDayOrEnd[grepl("Saturday|Sunday", dayOfWeek)] <- "weekend"
weekDayOrEnd <- factor(weekDayOrEnd, levels = c("weekday", "weekend")) }
)
View(imputedData)
?tapply
testData <- with(imputedData, split(steps, weekDayOrEnd) )
testData
testData[1:10]
testData[1:10,1]
testData[1:10, "weekday"]
testData$weekday[1:10]
testData$weekend[1:10]
View(imputedData)
View(imputedData)
testData <- split(imputedData, weekDayOrEnd)
testData <- split(imputedData, imputedData$weekDayOrEnd)
splitImpData <- split(imputedData, weekDayOrEnd)
splitImpData <- split(imputedData, imputedData$weekDayOrEnd)
rm(testData)
test <- lapply(splitImpData$steps, interval, mean)
test <- lapply(splitImpData$steps, splitImpData$interval, mean)
with(splitImpData$weekday, tapply(steps, interval, mean) )
meanWeekdays <- with(splitImpData$weekday, tapply(steps, interval, mean) )
splitImpData <- split(imputedData, imputedData$weekDayOrEnd)
meanWeekdays <- factor( with( splitImpData$weekday, tapply(steps, interval, mean) ) )
names(meanWeekdays) <- unique(splitImpData$interval)
meanWeekends <- factor( with( splitImpData$weekend, tapply(steps, interval, mean) ) )
names(meanWeekends) <- unique(splitImpData$interval)
meanWeekdays[1:10]
meanWeekdays[1]
unique(splitImpData$interval)
names(meanWeekends) <- unique(splitImpData$weekday$interval)
splitImpData <- split(imputedData, imputedData$weekDayOrEnd)
meanWeekdays <- factor( with( splitImpData$weekday, tapply(steps, interval, mean) ) )
names(meanWeekdays) <- unique(splitImpData$weekday$interval)
meanWeekends <- factor( with( splitImpData$weekend, tapply(steps, interval, mean) ) )
names(meanWeekends) <- unique(splitImpData$weekend$interval)
meanWeekdays[1:10]
## Are there differences in activity patterns between weekdays and weekends?
with(imputedData, {
dayOfWeek <- factor(weekdays(as.Date(date)))
weekDayOrEnd <- "weekday"
weekDayOrEnd[grepl("Saturday|Sunday", dayOfWeek)] <- "weekend"
weekDayOrEnd <- factor(weekDayOrEnd, levels = c("weekday", "weekend")) }
)
splitImpData <- split(imputedData, imputedData$weekDayOrEnd)
meanWeekdays <- factor( with( splitImpData$weekday, tapply(steps, interval, mean) ) )
names(meanWeekdays) <- intervals
meanWeekends <- factor( with( splitImpData$weekend, tapply(steps, interval, mean) ) )
names(meanWeekends) <- intervals
plot.new()
par(mfrow = c(2,1))
par(mfg=c(1,1))
plot(intervals,
meanWeekdays,
type = "l",
ylab = "Mean steps per interval",
xlab = "Interval number",
main = "Weekdays")
setwd("~/desk/classes/DataScience_Coursera/5-ReproducibleResearch/RepData_PeerAssessment1/")
if (!file.exists("activity.csv")) {
url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
fileName <- "activity.zip"
download.file(url, dest = "activity.zip", method = "curl")
fileName <- unzip("activity.zip")
}
stepData <- read.csv(fileName)
## What is mean total number of steps taken per day?
stepsPerDay <- with( stepData, tapply(steps, date, sum, na.rm = T) )
hist(stepsPerDay,
breaks = 10,
main = "Distribution of steps taken per day",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
mean(stepsPerDay)
median(stepsPerDay)
## What is the average daily activity pattern?
# intervals <- unique(stepData$interval)
meanStepsPerInterval <- factor( with(stepData, tapply(steps, interval, mean, na.rm = T) ) )
names(meanStepsPerInterval) <- unique(stepData$interval)
plot(intervals,
meanStepsPerInterval,
type = "l",
ylab = "Mean steps per interval",
xlab = "Interval number",
main = "Number of steps taken per interval, averaged across all days")
intervals[which.max(meanStepsPerInterval)]
## Imputing missing values
missingVals <- is.na(stepData[,1])
sum(missingVals)
# replace missing steps values with the mean number of steps for that interval
imputedData <- stepData
imputedData$steps[missingVals] <-
as.numeric( as.character( meanStepsPerInterval[as.character(stepData$interval[missingVals])] ) )
impStepsPerDay <- with( imputedData, tapply(steps, date, sum, na.rm = T) )
plot.new()
par(mfrow = c(1,2))
par(mfg=c(1,1))
hist(stepsPerDay,
breaks = 10,
main = "Original data",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
par(mfg=c(1,2))
hist(impStepsPerDay,
breaks = 10,
main = "NA's replaced w/ mean of interval",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
mean(impStepsPerDay)
median(impStepsPerDay)
## Are there differences in activity patterns between weekdays and weekends?
with(imputedData, {
dayOfWeek <- factor(weekdays(as.Date(date)))
weekDayOrEnd <- "weekday"
weekDayOrEnd[grepl("Saturday|Sunday", dayOfWeek)] <- "weekend"
weekDayOrEnd <- factor(weekDayOrEnd, levels = c("weekday", "weekend")) }
)
splitImpData <- split(imputedData, imputedData$weekDayOrEnd)
meanWeekdays <- factor( with( splitImpData$weekday, tapply(steps, interval, mean) ) )
names(meanWeekdays) <- intervals
meanWeekends <- factor( with( splitImpData$weekend, tapply(steps, interval, mean) ) )
names(meanWeekends) <- intervals
plot.new()
par(mfrow = c(2,1))
par(mfg=c(1,1))
rm(list = ls())
setwd("~/desk/classes/DataScience_Coursera/5-ReproducibleResearch/RepData_PeerAssessment1/")
if (!file.exists("activity.csv")) {
url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
fileName <- "activity.zip"
download.file(url, dest = "activity.zip", method = "curl")
fileName <- unzip("activity.zip")
}
stepData <- read.csv(fileName)
## What is mean total number of steps taken per day?
stepsPerDay <- with( stepData, tapply(steps, date, sum, na.rm = T) )
hist(stepsPerDay,
breaks = 10,
main = "Distribution of steps taken per day",
rm(list = ls())
setwd("~/desk/classes/DataScience_Coursera/5-ReproducibleResearch/RepData_PeerAssessment1/")
rm(list = ls())
rm(list = ls())
setwd("~/desk/classes/DataScience_Coursera/5-ReproducibleResearch/RepData_PeerAssessment1/")
if (!file.exists("activity.csv")) {
url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url, dest = "activity.zip", method = "curl")
unzip("activity.zip")
}
stepData <- read.csv("activity.csv")
dir()
rm(list = ls())
dir()
setwd("~/desk/classes/DataScience_Coursera/5-ReproducibleResearch/RepData_PeerAssessment1/")
if (!file.exists("activity.csv")) {
file.exists("activity.csv")
}
file.exists("activity.csv")
rm(list = ls())
setwd("~/desk/classes/DataScience_Coursera/5-ReproducibleResearch/RepData_PeerAssessment1/")
url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
if (!file.exists("activity.zip")) {
download.file(url, dest = "activity.zip", method = "curl")
}
unzip("activity.zip")
stepData <- read.csv("activity.csv")
## What is mean total number of steps taken per day?
stepsPerDay <- with( stepData, tapply(steps, date, sum, na.rm = T) )
hist(stepsPerDay,
breaks = 10,
main = "Distribution of steps taken per day",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
mean(stepsPerDay)
median(stepsPerDay)
## What is the average daily activity pattern?
intervals <- unique(stepData$interval)
meanStepsPerInterval <- factor( with(stepData, tapply(steps, interval, mean, na.rm = T) ) )
names(meanStepsPerInterval) <- intervals
plot(intervals,
meanStepsPerInterval,
type = "l",
ylab = "Mean steps per interval",
xlab = "Interval number",
main = "Number of steps taken per interval, averaged across all days")
intervals[which.max(meanStepsPerInterval)]
## Imputing missing values
missingVals <- is.na(stepData[,1])
sum(missingVals)
# replace missing steps values with the mean number of steps for that interval
imputedData <- stepData
imputedData$steps[missingVals] <-
as.numeric( as.character( meanStepsPerInterval[as.character(stepData$interval[missingVals])] ) )
impStepsPerDay <- with( imputedData, tapply(steps, date, sum, na.rm = T) )
plot.new()
par(mfrow = c(1,2))
par(mfg=c(1,1))
hist(stepsPerDay,
breaks = 10,
main = "Original data",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
par(mfg=c(1,2))
hist(impStepsPerDay,
breaks = 10,
main = "NA's replaced w/ mean of interval",
xlab = "Steps per day",
ylab = "Count",
xlim = c(0, 25000))
mean(impStepsPerDay)
median(impStepsPerDay)
## Are there differences in activity patterns between weekdays and weekends?
with(imputedData, {
dayOfWeek <- factor(weekdays(as.Date(date)))
weekDayOrEnd <- "weekday"
weekDayOrEnd[grepl("Saturday|Sunday", dayOfWeek)] <- "weekend"
weekDayOrEnd <- factor(weekDayOrEnd, levels = c("weekday", "weekend")) }
)
splitImpData <- split(imputedData, imputedData$weekDayOrEnd)
with(imputedData, {
dayOfWeek <- factor(weekdays(as.Date(date)))
weekDayOrEnd <- "weekday"
weekDayOrEnd[grepl("Saturday|Sunday", dayOfWeek)] <- "weekend"
weekDayOrEnd <- factor(weekDayOrEnd, levels = c("weekday", "weekend")) }
)
View(imputedData)
with(imputedData, dayOfWeek <- factor(weekdays(as.Date(date))) )
imputedData$dayOfWeek <- factor(weekdays(as.Date(imputedData$date)))
imputedData$dayOfWeek <- factor(weekdays(as.Date(imputedData$date)))
imputedData$weekDayOrEnd <- "weekday"
imputedData$weekDayOrEnd[grepl("Saturday|Sunday", imputedData$dayOfWeek)] <- "weekend"
imputedData$weekDayOrEnd <- factor(imputedData$weekDayOrEnd, levels = c("weekday", "weekend"))
View(imputedData)
meanWeekdays <- factor( with( splitImpData$weekday, tapply(steps, interval, mean) ) )
names(meanWeekdays) <- intervals
meanWeekends <- factor( with( splitImpData$weekend, tapply(steps, interval, mean) ) )
names(meanWeekends) <- intervals
splitImpData <- split(imputedData, imputedData$weekDayOrEnd)
meanWeekdays <- factor( with( splitImpData$weekday, tapply(steps, interval, mean) ) )
names(meanWeekdays) <- intervals
meanWeekends <- factor( with( splitImpData$weekend, tapply(steps, interval, mean) ) )
names(meanWeekends) <- intervals
plot.new()
par(mfrow = c(2,1))
par(mfg=c(1,1))
plot(intervals,
meanWeekdays,
type = "l",
ylab = "Mean steps per interval",
xlab = "Interval number",
main = "Weekdays")
par(mfg=c(2,1))
plot(intervals,
meanWeekends,
type = "l",
ylab = "Mean steps per interval",
xlab = "Interval number",
main = "Weekends")
